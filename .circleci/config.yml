version: 2.1

references:
  environment: &environment
    REPO_NAME: emmercm/libtorrent

executors:
  docker:
    docker:
      - image: docker:stable

jobs:
  dummy:
    executor: docker
    steps:
      - run:
          name: Dummy
          command: echo ok

  lint:
    parameters:
      directory:
        type: string
    executor: docker
    environment:
      DIRECTORY: << parameters.directory >>
      <<: *environment
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run hadolint
          command: |
            cd "${DIRECTORY}"
            docker run --rm --interactive hadolint/hadolint < Dockerfile

  build:
    parameters:
      directory:
        type: string
        default: ""
      version:
        type: string
      tags:
        type: string
        default: ""
    executor: docker
    environment:
      DIRECTORY: << parameters.directory >>
      VERSION: << parameters.version >>
      TAGS: << parameters.tags >>
      <<: *environment
    steps:
      - checkout
      - run:
          name: Shortcut build
          command: |
            apk add --no-cache curl git jq > /dev/null
            # If tag doesn't exist, don't halt job
            curl -f "https://index.docker.io/v1/repositories/${REPO_NAME}/tags/${VERSION}" &> /dev/null || (
              echo "${REPO_NAME}:${VERSION} doesn't exist, continuing build"
              exit 0
            )
            # If directory has changes, don't halt job (assumes not fork PR)
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              GIT_DIFF_BASE="HEAD~"
            else
              CIRCLE_PR_NUMBER=${CIRCLE_PR_NUMBER:-$(echo "${CIRCLE_PULL_REQUEST}" | sed 's/.\+\///')}
              GIT_DIFF_BASE="origin/$(curl -s "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${CIRCLE_PR_NUMBER}" | jq -r '.base.ref')"
            fi
            DIRECTORY_MODIFIED=$(git diff "${GIT_DIFF_BASE}" --name-only | grep '/' | sed 's/\/.\+//g' | grep "${DIRECTORY:-${VERSION%.*}}" || true)
            if [[ "${DIRECTORY_MODIFIED}" != "" ]]; then
              echo "Directory ${DIRECTORY_MODIFIED} has changes, continuing build"
              exit 0
            fi
            # Otherwise halt job
            echo "Shortcutting the build of ${REPO_NAME}:${VERSION}"
            circleci-agent step halt
      - setup_remote_docker
      - restore_cache:
          keys:
            - v4-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}
            - v4-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-
            - v4-{{ .Environment.CIRCLE_JOB }}-
          paths:
            - /cache
      - run:
          name: Load Docker image from cache
          command: |
            for TAR in $(ls -1 /cache/*.tar); do
              docker load --input "${TAR}"
              rm "${TAR}"
            done
      - run:
          name: Build Docker image
          command: |
            cd "${DIRECTORY:-${VERSION%.*}}"
            docker build \
              --cache-from="${REPO_NAME}:${VERSION}" \
              --build-arg VERSION="${VERSION}" \
              --tag "${REPO_NAME}:${VERSION}" \
              --tag "${REPO_NAME}:${VERSION}-alpine" .
            for TAG in ${TAGS}; do
              docker tag "${REPO_NAME}:${VERSION}" "${REPO_NAME}:${TAG}"
            done
      - run:
          name: Test Docker image
          command: |
            apk add --no-cache curl > /dev/null
            curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 && chmod +x container-structure-test-linux-amd64 && mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
            container-structure-test test --config "${DIRECTORY:-${VERSION%.*}}/container-structure-test.yml" --image "${REPO_NAME}:${VERSION}"
      - run:
          name: Save Docker image to cache
          command: |
            if [[ ! -e /cache ]]; then
              mkdir /cache
            fi
            docker save --output "/cache/${VERSION}.tar" "${REPO_NAME}"
      - save_cache:
          key: v4-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - /cache
      - persist_to_workspace:
          root: /cache
          paths:
            - "*"

  push:
    executor: docker
    environment:
      <<: *environment
    steps:
      - attach_workspace:
          at: /cache
      - setup_remote_docker
      - run:
          name: Load Docker image(s) from workspace
          command: |
            for TAR in $(ls -1 /cache/*.tar); do
              docker load --input "${TAR}"
            done
      - run:
          name: Publish Docker image(s)
          command: |
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            for TAG in $(docker image ls --format "{{.Repository}}:{{.Tag}}" "${REPO_NAME}"); do
              docker push "${TAG}"
            done
      - run:
          name: Update MicroBadger
          command: |
            apk add --no-cache curl
            curl --request POST "${MICROBADGER_WEBHOOK}"

  update-description:
    executor: docker
    environment:
      <<: *environment
    steps:
      - checkout
      - run:
          name: Install docker-pushrm
          command: |
            if [[ ! -d "$HOME/.docker/cli-plugins" ]]; then
              mkdir -p "$HOME/.docker/cli-plugins"
            fi
            wget https://github.com/christian-korneck/docker-pushrm/releases/download/v1.5.0/docker-pushrm_linux_amd64 -O "$HOME/.docker/cli-plugins/docker-pushrm"
            chmod +x "$HOME/.docker/cli-plugins/docker-pushrm"
      - run:
          # Can't use 2FA: https://github.com/docker/roadmap/issues/115
          name: Update Docker Hub description
          command: |
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            docker pushrm "${REPO_NAME}" --short "$(cat README.md | grep '^\w' | head -1)"

workflows:
  version: 2.1
  build-test-push:
    jobs:
      - lint:
          name: "2.0-lint"
          directory: "2.0"
      - lint:
          name: "1.2-py3-lint"
          directory: "1.2-py3"
      - lint:
          name: "1.2-py2-lint"
          directory: "1.2-py2"
      - lint:
          name: "1.1-lint"
          directory: "1.1"
      - lint:
          name: "1.0-lint"
          directory: "1.0"
      - lint:
          name: "0.16-lint"
          directory: "0.16"
      - dummy:
          name: "lint"
          requires:
            - "2.0-lint"
            - "1.2-py2-lint"
            - "1.2-py3-lint"
            - "1.1-lint"
            - "1.0-lint"
            - "0.16-lint"

      # https://github.com/arvidn/libtorrent/releases
      - build:
          name: "2.0-build-test"
          version: "2.0.2"
          tags: 2.0 2.0-alpine 2 2-alpine latest
          requires:
            - "lint"
      - build:
          name: "1.2-py3-build-test"
          directory: "1.2-py3"
          version: "1.2.12"
          tags: 1.2 1.2-alpine 1 1-alpine
          requires:
            - "lint"
      - build:
          name: "1.2-py2-build-test"
          directory: "1.2-py2"
          version: "1.2.11"
          requires:
            - "lint"
      - build:
          name: "1.1-build-test"
          version: "1.1.14"
          tags: 1.1 1.1-alpine
          requires:
            - "lint"
      - build:
          name: "1.0-build-test"
          version: "1.0.11"
          tags: 1.0 1.0-alpine
          requires:
            - "lint"
      - build:
          name: "0.16-build-test"
          version: "0.16.17"
          tags: 0.16 0.16-alpine 0 0-alpine
          requires:
            - "lint"
      - dummy:
          name: "test"
          requires:
            - "2.0-build-test"
            - "1.2-py3-build-test"
            - "1.2-py2-build-test"
            - "1.1-build-test"
            - "1.0-build-test"
            - "0.16-build-test"
      
      - push:
          requires:
            - test
          filters:
            branches:
              only: master

      - update-description:
          requires:
            - push
          filters:
            branches:
              only: master
