version: 2.1

references:
  env: &env
    environment:
      REPO_NAME: emmercm/libtorrent

executors:
  docker:
    docker:
      - image: docker:stable

jobs:
  build:
    parameters:
      base_image:
        type: string
      version:
        type: string
      tags:
        type: string
    executor: docker
    <<: *env
    environment:
      BASE_IMAGE: << parameters.base_image >>
      _VERSION: << parameters.version >>
      REPO_NAME: emmercm/libtorrent
      TAGS: << parameters.tags >>
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup Environment Variables
          command: |
            apk add --no-cache coreutils curl jq
            mkdir -p /workspace
            VERSION=$(curl --silent https://api.github.com/repos/arvidn/libtorrent/git/refs/tags | jq '.[] .ref' | sed 's/"//g' | sed 's/refs\/tags\///g' | sed 's/-/_/g' | sort --version-sort --reverse | grep "${_VERSION}"  | (head -1 || true) | sed -r "s/.*[^0-9]([0-9]+[^0-9][0-9]+[^0-9][0-9]+)$/\1/" | sed 's/_/./g')
            echo "export VERSION=${VERSION}" >> /workspace/.env
      - restore_cache:
          keys:
            - v2-{{ .Branch }}
          paths:
            - /workspace/images.tar
      - run:
          name: Load Docker Image(s) from Cache
          command: |
            docker load --input /workspace/images.tar || true
      - run:
          name: Build Docker Image
          command: |
            source /workspace/.env
            docker build --cache-from=${REPO_NAME}:${VERSION} \
              --build-arg BASE_IMAGE=${BASE_IMAGE} \
              --build-arg VERSION=${VERSION} \
              --tag ${REPO_NAME}:${VERSION} \
              --tag ${REPO_NAME}:${VERSION}-${BASE_IMAGE//:/} .
            for TAG in ${TAGS}; do
              docker tag ${REPO_NAME}:${VERSION} ${REPO_NAME}:${TAG}
            done
      - run:
          name: Save Docker Image(s) to Cache
          command: |
            source /workspace/.env
            docker save --output /workspace/images.tar ${REPO_NAME}
      - save_cache:
          key: v2-{{ .Branch }}-{{ epoch }}
          paths:
            - /workspace/images.tar
      - persist_to_workspace:
          root: /workspace
          paths:
            - "*"

  push:
    executor: docker
    <<: *env
    steps:
      - attach_workspace:
          at: /workspace
      - setup_remote_docker
      - run:
          name: Load Docker Image(s) from Cache
          command: |
            docker load --input /workspace/images.tar || true
      - run:
          name: Publish Docker Image
          command: |
            source /workspace/.env
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            for TAG in $(docker image ls --format "{{.Repository}}:{{.Tag}}" ${REPO_NAME}); do
              docker push ${TAG}
            done

  update-description:
    executor: docker
    <<: *env
    steps:
      - attach_workspace:
          at: /workspace
      - checkout
      - run:
          name: Update Docker Hub Description
          command: |
            source /workspace/.env
            apk add --no-cache curl jq
            TOKEN=$(curl --request POST https://hub.docker.com/v2/users/login \
              --header "Content-Type: application/json" \
              --data '{"username":"'"${DOCKERHUB_USERNAME}"'", "password":"'"${DOCKERHUB_PASS}"'"}' | jq -r .token)

            FULL_DESCRIPTION=$(cat README.md)
            echo "${FULL_DESCRIPTION}"
            DESCRIPTION=$(echo "${FULL_DESCRIPTION}" | sed '/^ *$/d' | sed '/^ *#/d')
            echo "${DESCRIPTION}"
            jq --null-input --arg SHORT "${DESCRIPTION}" --arg FULL "${FULL_DESCRIPTION}" '{"description":$SHORT, "full_description":$FULL}'

            curl --request PATCH https://hub.docker.com/v2/repositories/${REPO_NAME} \
              --header "Content-Type: application/json" \
              --header "Authorization: JWT ${TOKEN}" \
              --data '{"full_description":${FULL_DESCRIPTION}}'

workflows:
  version: 2.1
  build-push:
    jobs:
      # https://github.com/arvidn/libtorrent/releases
      - build:
          base_image: alpine:3.9
          version: 1.1.*
          tags: 1.1 latest
      
      - push:
          requires:
            - build

      - update-description:
          requires:
            - push
