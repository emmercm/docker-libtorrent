# Useful links:
#   Dynamic environment variables:
#     https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-shell-command
#   Building Docker images:
#     https://circleci.com/blog/how-to-build-a-docker-image-on-circleci-2-0/
#     https://circleci.com/blog/using-circleci-workflows-to-replicate-docker-hub-automated-builds/
#   Cross-compilimg:
#     https://github.com/bubuntux/nordvpn/tree/master/hooks

version: 2.1

executors:
  docker:
    docker:
      - image: docker:stable

jobs:
  build:
    parameters:
      base_image:
        type: string
      architecture:
        type: string
      version:
        type: string
    executor: docker
    environment:
      BASE_IMAGE: << parameters.base_image >>
      ARCHITECTURE: << parameters.architecture >>
      _VERSION: << parameters.version >>
      IMAGE_NAME: emmercm/libtorrent
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup Environment Variables
          command: |
            apk add --no-cache coreutils curl jq
            echo "export VERSION=$(curl --silent https://api.github.com/repos/arvidn/libtorrent/git/refs/tags | jq '.[] .ref' | sed 's/"//g' | sed 's/refs\/tags\///g' | sed 's/-/_/g' | sort --version-sort --reverse | grep "${_VERSION}"  | head -1 | sed -r "s/.*[^0-9]([0-9]+[^0-9][0-9]+[^0-9][0-9]+)$/\1/" | sed 's/_/./g')" >> ${BASH_ENV}
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /cache/images.tar
      - run:
          name: Load Docker Image(s) from Cache
          command: |
            docker load --input /cache/images.tar || true
      - run:
          name: Build Docker Image
          command: |
            source ${BASH_ENV}
            TAG=${IMAGE_NAME}:${VERSION}-${BASE_IMAGE//:/}
            docker build --cache-from=${TAG} \
              --build-arg BASE_IMAGE=${ARCHITECTURE}/${BASE_IMAGE} \
              --build-arg VERSION=${VERSION} \
              --tag ${TAG} .
      - run:
          name: Save Docker Image(s) to Cache
          command: |
            source ${BASH_ENV}
            mkdir -p /cache
            docker save --output /cache/images.tar ${IMAGE_NAME}
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /cache/images.tar
      - persist_to_workspace:
          root: /cache
          paths:
            - images.tar

  push:
    executor: docker
    steps:
      - attach_workspace:
          at: /cache
      - setup_remote_docker
      - run:
          name: Load Docker Image(s) from Cache
          command: |
            docker load --input /cache/images.tar || true
      - run:
          name: Publish Docker Image
          command: |
            docker image ls

workflows:
  version: 2.1
  build-push:
    jobs:
      - build:
          base_image: alpine:3.9
          architecture: amd64
          version: 1.1.*
      
      - push:
          requires:
            - build
